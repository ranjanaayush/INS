https://drive.google.com/drive/folders/1BBbmFtBDrHOs584nVG-epDGddjh-CwNT?usp=sharing

conda install -c conda-forge r-data.table r-magrittr r-lubridate r-ggplot2 r-cowplot r-repr r-kableextra r-irdisplay

conda install -c conda-forge r-knitr r-rmdformats r-data.table r-magrittr r-lubridate r-ggplot2 r-cowplot r-repr r-kableextra r-irdisplay


library(lubridate)

valuation_date <- as.Date("2016-09-27")

# Claims reported before valuation date
claims_before_val <- dt_policy_claim[date_report < valuation_date]

# Claims reported within 3 months after valuation date
claims_within_3m <- dt_policy_claim[
  date_report >= valuation_date & date_report < (valuation_date %m+% months(3))
]

# Claims reported within 12 months after valuation datea
claims_within_12m <- dt_policy_claim[
  date_report >= valuation_date & date_report < (valuation_date %m+% months(12))
]

write.csv(claims_before_val, "claims_before_valuation.csv", row.names = FALSE)
write.csv(claims_within_3m, "claims_within_3_months.csv", row.names = FALSE)
write.csv(claims_within_12m, "claims_within_12_months.csv", row.names = FALSE)

library(openxlsx)

write.xlsx(claims_before_val, "claims_before_valuation.xlsx")
write.xlsx(claims_within_3m, "claims_within_3_months.xlsx")
write.xlsx(claims_within_12m, "claims_within_12_months.xlsx")









# Extract year from the 'date_occur_YYYYMM' column and add it as a new column 'year'
dt_RBNS_summary[, year := substr(date_occur_YYYYMM, 1, 4)]

# Aggregate data by year and sum preds and target
dt_RBNS_yearly <- dt_RBNS_summary[, lapply(.SD, sum), by = year, .SDcols = c("preds", "target")]

# Add a total row for the sum of all years
sumrow <- cbind(data.table(year = "Total"), dt_RBNS_yearly[, lapply(.SD, sum), .SDcols = c("preds", "target")])

# Bind the sum row to the yearly data
dt_RBNS_yearly <- rbind(dt_RBNS_yearly, sumrow, fill = TRUE)

# Calculate the difference and percentage difference
dt_RBNS_yearly[, ':='(
  Diff = (preds - target),
  Diff_pcnt = scales::percent((preds - target) / target, accuracy = 0.1)
)]

# Print the table as HTML with year-based aggregation
kable(dt_RBNS_yearly, "html",
      digits = c(2, 0, 0, 0, 1),
      format.args = list(big.mark = ",", scientific = FALSE)
) %>% 
  kable_styling("striped") %>% 
  scroll_box(width = "100%") %>%
  as.character() %>%
  display_html()
